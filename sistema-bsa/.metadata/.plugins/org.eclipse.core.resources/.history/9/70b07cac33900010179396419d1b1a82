package dao;

import org.mindrot.jbcrypt.BCrypt; 

import model.Usuario;
import util.Conexao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.sql.ResultSet; 

public class UsuarioDAO {

    public void cadastrar(Usuario novoUsuario) {
        
        String sql = "INSERT INTO USUARIOS (nome_completo, cpf, email, cargo, login, senha, perfil) VALUES (?, ?, ?, ?, ?, ?, ?)";
        
        Connection conexao = null;
        PreparedStatement stmt = null;

        try {
            conexao = new Conexao().getConexao();
            
            stmt = conexao.prepareStatement(sql);
            
            // Pega os dados do objeto "novoUsuario" para preencher o SQL
            stmt.setString(1, novoUsuario.getNomeCompleto());
            stmt.setString(2, novoUsuario.getCpf());
            stmt.setString(3, novoUsuario.getEmail());
            stmt.setString(4, novoUsuario.getCargo());
            stmt.setString(5, novoUsuario.getLogin());
            String senhaHasheada = BCrypt.hashpw(novoUsuario.getSenha(), BCrypt.gensalt());
            stmt.setString(6, senhaHasheada);
            stmt.setString(7, novoUsuario.getPerfil());
            
            stmt.execute();
            System.out.println("Usuário cadastrado com sucesso pelo DAO!");

        } catch (SQLException e) {
            System.out.println("Erro ao cadastrar usuário no DAO: " + e.getMessage());
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (conexao != null) {
                    conexao.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    public List<Usuario> listarTodos() {
        
        List<Usuario> listaDeUsuarios = new ArrayList<>();
        
        String sql = "SELECT * FROM USUARIOS"; //
        
        Connection conexao = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            conexao = new Conexao().getConexao();
            stmt = conexao.prepareStatement(sql);
            
            rs = stmt.executeQuery();
            
            while (rs.next()) {
                
                Usuario usuario = new Usuario();
                
                usuario.setId(rs.getInt("id_usuario"));
                usuario.setNomeCompleto(rs.getString("nome_completo"));
                usuario.setCpf(rs.getString("cpf"));
                usuario.setEmail(rs.getString("email"));
                usuario.setCargo(rs.getString("cargo"));
                usuario.setLogin(rs.getString("login"));
                // Por segurança, não trazemos a senha para a tela.
                usuario.setPerfil(rs.getString("perfil"));
                
                listaDeUsuarios.add(usuario);
            }

        } catch (SQLException e) {
            System.out.println("Erro ao listar usuários: " + e.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conexao != null) conexao.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
        return listaDeUsuarios;
    }
    
    public void deletarPorCpf(String cpf) {
        String sql = "DELETE FROM USUARIOS WHERE cpf = ?"; 
        
        Connection conexao = null;
        PreparedStatement stmt = null;

        try {
            conexao = new Conexao().getConexao();
            stmt = conexao.prepareStatement(sql);
            stmt.setString(1, cpf); 
            
            stmt.execute();
            System.out.println("Usuário deletado com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao deletar usuário: " + e.getMessage());
        } finally {
            try {
                if (stmt != null) stmt.close();
                if (conexao != null) conexao.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    public void atualizar(Usuario usuario) {
        // Usaremos o CPF como chave para encontrar o usuário a ser atualizado
        String sql = "UPDATE USUARIOS SET nome_completo = ?, email = ?, cargo = ?, login = ?, senha = ?, perfil = ? WHERE cpf = ?";
        
        Connection conexao = null;
        PreparedStatement stmt = null;

        try {
            conexao = new Conexao().getConexao();
            stmt = conexao.prepareStatement(sql);
            
            stmt.setString(1, usuario.getNomeCompleto());
            stmt.setString(2, usuario.getEmail());
            stmt.setString(3, usuario.getCargo());
            stmt.setString(4, usuario.getLogin());
            stmt.setString(5, usuario.getSenha());
            stmt.setString(6, usuario.getPerfil());
            stmt.setString(7, usuario.getCpf());
            
            
            System.out.println("Usuário atualizado com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao atualizar usuário: " + e.getMessage());
        } finally {
        	try {
                if (stmt != null) stmt.close();
                if (conexao != null) conexao.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public Usuario validarLogin(String login, String senhaDigitada) {
        String sql = "SELECT * FROM usuarios WHERE login = ?";
        Usuario usuario = null;

        try (Connection conexao = new Conexao().getConexao();
             PreparedStatement stmt = conexao.prepareStatement(sql)) {

            stmt.setString(1, login);

            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    String hashDoBanco = rs.getString("senha");

                    if (BCrypt.checkpw(senhaDigitada, hashDoBanco)) {
                        usuario = new Usuario();
                        usuario.setId(rs.getInt("id_usuario"));
                        usuario.setNomeCompleto(rs.getString("nome_completo"));
                        usuario.setLogin(rs.getString("login"));
                        usuario.setPerfil(rs.getString("perfil"));
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return usuario;
    }
}
